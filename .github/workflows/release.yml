name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release-notes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1
          ref: 'main'
      - name: Get Latest Tag
        id: latest-tag
        run: |
          git fetch --tags
          latest_tag=$(git tag -l --sort=-v:refname | head -n 1)
          echo "latest_tag=$latest_tag" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Release Notes
        run: |
          latest_entry=$(sed -n '/^##/,$p' CHANGELOG.md | awk '/^##/ {if (version) {print entry; exit} version=$0} {entry = entry ORS $0}')
          echo "$latest_entry" > release-notes.md
      - uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: release-notes
          path: release-notes.md
          retention-days: 1
      - name: GH Release
        run: |
          gh release create "${{ steps.latest-tag.outputs.latest_tag }}" --notes-file release-notes.md --title "${{ steps.latest-tag.outputs.latest_tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Create release
      #   uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 # v5.0.0
      #   with:
      #     distribution: goreleaser
      #     version: v1.24.0
      #     args: release --release-notes release-notes.txt --clean --rm-dist
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

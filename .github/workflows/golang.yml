name: Go

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, labeled, reopened]

# permissions:
#   # Required: allow read access to the content for analysis.
#   contents: read
#   # Optional: allow read access to pull request. Use with `only-new-issues` option.
#   # pull-requests: read
#   # Optional: Allow write access to checks to allow the action to annotate code in the PR.
#   checks: write

jobs:
  linters:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '^1.22' ]
    name: Go ${{ matrix.go }} linters
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ matrix.go }}
          check-latest: false
          cache: false
        id: go
      - name: golangci-lint
        # v8.0.0 works with golangci-lint version >= v2.1.0
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: v2.1.0
          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          # args: --timeout=30m --config=/my/path/.golangci.yml --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # skip-cache: true
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '^1.22' ]
    name: Go ${{ matrix.go }} tests
    # needs: [linters]
    env:
      CA_CERT: ${{ secrets.CA_CERT }}
      CA_KEY: ${{ secrets.CA_KEY }}
      INVALID_CERT: ${{ secrets.INVALID_CERT }}
      INVALID_CERT_KEY: ${{ secrets.INVALID_CERT_KEY }}
      SERVER_CERT: ${{ secrets.SERVER_CERT }}
      SERVER_CERT_KEY: ${{ secrets.SERVER_CERT_KEY }}
      SERVER_REQ_PEM: ${{ secrets.SERVER_REQ_PEM }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ matrix.go }}
          check-latest: false
          cache: false
        id: go
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: generate certs for tests
        run: |
          mkdir -p testdata
          echo "$CA_CERT" > testdata/ca-cert.pem
          echo "$CA_KEY" > testdata/ca-key.pem
          echo "$INVALID_CERT" > testdata/invalid-cert.pem
          echo "$INVALID_CERT_KEY" > testdata/invalid-cert.key
          echo "$SERVER_CERT" > testdata/server-cert.pem
          echo "$SERVER_CERT_KEY" > testdata/server-key.key
          echo "$SERVER_REQ_PEM" > testdata/server-req.pem
      - name: Test
        run: go test -v -coverprofile=coverage.out ./...

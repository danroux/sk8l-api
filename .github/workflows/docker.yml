name: Build & Push images

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
  push:
    branches:
      - 'main'
    tags:
      - '*'

permissions:
  packages: write

jobs:
  sk8l-api-dev-img:
    runs-on: ubuntu-latest
    name: sk8l-api:dev-${{ inputs.image_tag }}
    if: ${{ github.event_name == 'pull_request' && inputs.image_tag || github.event_name == 'workflow_call' }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Checkout - set env
        run: |
          echo "IMAGE_TAG=$(make version)" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: go-build-cache
        uses: actions/cache@v4
        id: go-build-cache
        with:
          path: var-cache-gocache
          key: ${{ runner.os }}-go-build-cache-${{ hashFiles('**/go.sum') }}
      # - name: Inject go-build-cache
      #   uses: reproducible-containers/buildkit-cache-dance@v2.1.4
      #   with:
      #     cache-source: go-build-cache
      #     cache-target: ~/.gocache
      #     skip-extraction: ${{ steps.go-build-cache.outputs.cache-hit }}
      - name: go-mod-cache
        uses: actions/cache@v4
        id: go-mod-cache
        with:
          path: var-cache-gomodcache
          key: ${{ runner.os }}-go-mod-cache-${{ hashFiles('**/go.sum') }}
      # - name: Inject go-mod-cache
      #   uses: reproducible-containers/buildkit-cache-dance@v2.1.4
      #   with:
      #     cache-source: go-mod-cache
      #     cache-target: ~/.gomodcache
      #     skip-extraction: ${{ steps.go-mod-cache.outputs.cache-hit }}
      - name: inject cache folders into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.2.0
        with:
          builder: ${{ steps.setup-buildx.outputs.name }}
          utility-image: ghcr.io/containerd/busybox:latest
          cache-map: |
            {
              "var-cache-gocache":{
                "target": "/root/.cache/go-build",
                "id": "gomodcache"
                },
              "var-cache-gomodcache": {
                "target": "/go/pkg/mod",
                "id": "gocache"
                }
            }
          skip-extraction: ${{ steps.go-mod-cache.outputs.cache-hit }}
      - name: Cache sk8l-api:dev-${{ inputs.image_tag }}
        id: image-cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ./sk8l-api:dev-${{ inputs.image_tag }}.tar
          key: dev-${{ inputs.image_tag }}-${{ github.sha }}
      - run: echo "cache-hit=${{ steps.image-cache.outputs.cache-hit }}"
      - name: Build sk8l-api:dev-${{ inputs.image_tag }}
        if: steps.image-cache.outputs.cache-hit != 'true'
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          push: false
          load: false
          outputs: type=oci,dest=sk8l-api:dev-${{ inputs.image_tag }}.tar,tar=true
          tags: |
            ${{ vars.DOCKERHUB_SK8L_API_IMAGE_NAME }}:dev-${{ inputs.image_tag }}
      - name: Login to ghcr.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push dev version to ghcr.io
        if: steps.image-cache.outputs.cache-hit != 'true'
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ vars.GHCR_SK8L_API_IMAGE_NAME }}:dev-${{ github.sha }}
            ${{ vars.GHCR_SK8L_API_IMAGE_NAME }}:dev-${{ inputs.image_tag }}
  sk8l-image:
    runs-on: ubuntu-latest
    name: sk8l-api:tag | sk8l-api:latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Checkout - set env
        run: echo "IMAGE_TAG=$(make version)" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push release version
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ vars.DOCKERHUB_SK8L_API_IMAGE_NAME }}:latest
            ${{ vars.DOCKERHUB_SK8L_API_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  sk8l-api-pre-img-main:
    runs-on: ubuntu-latest
    name: sk8l-api:pre-${{ github.sha }}
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Login to ghcr.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push pre version
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ vars.GHCR_SK8L_API_IMAGE_NAME }}:pre
            ${{ vars.GHCR_SK8L_API_IMAGE_NAME }}:pre-${{ github.sha }}

# Available parameters and their default values for the sk8l Chart.

namespace:
  create: true
  name: ""
  labels: {}
  # pod-security.kubernetes.io/enforce: baseline
  # pod-security.kubernetes.io/enforce-version: latest
  # pod-security.kubernetes.io/warn: restricted
  # pod-security.kubernetes.io/warn-version: latest
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  metadata:
    name: "sk8l"
    namespace: "sk8l"
    labels:
      name: "sk8l"
    # Annotations to add to the service account
    annotations: {}
sk8lApi:
  image: "danroux/sk8l-api"
  imageTag: "v0.16.0"
  imagePullPolicy: ""
  autoscaling:
    enabled: true
    replicaCount: 1
  # sk8l-api needs a TLS server and ca certificate(if self-signed)
  volumeMounts: []
  # - name: tls-certs
  #   mountPath: /etc/sk8l-certs
  #   readOnly: true
  volumes: []
  # - name: tls-certs
  #   projected:
  #     sources:
  #     - secret:
  #         name: sk8l-server-cert-secret
  #         items:
  #           - key: tls.crt
  #             path: server-cert.pem
  #           - key: tls.key
  #             path: server-key.pem
  #     - secret:
  #         name: sk8l-ca-root-cert-secret
  #         items:
  #           - key: tls.crt
  #             path: ca-cert.pem
sk8lUi:
  image: "danroux/sk8l-ui"
  imageTag: "v0.17.0"
  imagePullPolicy: ""
  volumeMounts:
    - name: nginx-cache
      mountPath: /var/cache/nginx/
    - name: var-run
      mountPath: /var/run
    - name: app-dir
      mountPath: /app
  # - name: tls-certs
  #   mountPath: /etc/sk8l-certs
  #   readOnly: true
  volumes:
    - name: app-dir
      emptyDir: {}
    - name: nginx-cache
      emptyDir: {}
    - name: var-run
      emptyDir: {}
    - name: tmp
      emptyDir: {}
      # If you need to configure the nginx instance serving the ui
      # you can do it by replacing the mounted nginx-configmap.
      #
      # nginx also needs the TLS certificates
      # - name: tls-certs
      #   projected:
      #     sources:
      #     - secret:
      #         name: sk8l-server-cert-secret
      #         items:
      #           - key: tls.crt
      #             path: server-cert.pem
      #           - key: tls.key
      #             path: server-key.pem
      #     - secret:
      #         name: sk8l-ca-root-cert-secret
      #         items:
      #           - key: tls.crt
      #             path: ca-cert.pem
envoy:
  image: ""
  volumeMounts:
    - name: tmp
      mountPath: /tmp
      # Envoy needs a TLS certificate.
      # You can mount a volume with a secret with the keys:
      # - tls.crt.
      # - tls.key.
      # - ca.crt.
      #
      # Eg.:
      # - name: tls-certs
      #   mountPath: /etc/sk8l-certs
      #   readOnly: true
# Security context for the pod template and containers
# The default securityContexts are:
# securityContext:
#   pod:
#     runAsNonRoot: true
#     runAsGroup: {{ .Values.gid | default 1000 }}
#     runAsUser: {{ .Values.uid | default 100 }}
#     fsGroup: {{ .Values.gid | default 1000 }}
#   container:
#     allowPrivilegeEscalation: false
#     capabilities:
#       drop:
#         - ALL
securityContext:
  # pod: {}
  # container: {}
  pod:
    runAsNonRoot: true
  container:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    capabilities:
      drop: ['ALL']
    seccompProfile:
      type: RuntimeDefault
service:
  annotations: []
  type: LoadBalancer
  labels:
    app.kubernetes.io/name: sk8l
  ports:
    - name: sk8l-api
      protocol: TCP
      port: 8585
      targetPort: api-port
    - name: sk8l-api-health
      protocol: TCP
      port: 8588
      targetPort: api-health-port
    - name: sk8l-api-metrics
      protocol: TCP
      port: 8590
      targetPort: metrics-port
uiService:
  annotations: []
  type: LoadBalancer
  labels:
    app.kubernetes.io/name: sk8l
  ports:
    - name: sk8l-ui
      protocol: TCP
      port: 8001
      targetPort: sk8l-ui-port
    - name: envoy
      protocol: TCP
      port: 9080
      targetPort: envoy-port
    - name: envoy-admin
      protocol: TCP
      port: 9901
      targetPort: envoy-adm-port
# Enables network policy for sk8l pods
networkPolicy:
  enabled: true
  apiserverPolicy:
    ingress:
      - from:
          - ipBlock:
              cidr: 0.0.0.0/8
    egress:
      - to:
          - ipBlock:
              cidr: 0.0.0.0/8
configMaps:
  ui:
    # You can change the URL used on the frontend if needed.
    vite_sk8l_api_url: "https://localhost:9080"
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi
nodeSelector: {}
tolerations: []
affinity: {}
updateStrategy: {}
# type: RollingUpdate
# rollingUpdate:
#   maxSurge: 1
#   maxUnavailable: 1

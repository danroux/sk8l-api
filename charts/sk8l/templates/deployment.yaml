apiVersion: apps/v1
kind: Deployment
metadata:
  name: sk8l-api
  labels:
    app: sk8l
  namespace: {{ .Values.namespace.name | default "sk8l" | quote }}
spec:
  {{- if .Values.sk8lApi.autoscaling.enabled }}
  replicas: {{ .Values.sk8lApi.autoscaling.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/pod: sk8l-api
  {{- with .Values.updateStrategy }}
  strategy:
    {{ toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/pod: sk8l-api
        app.kubernetes.io/name: sk8l
      annotations:
        sk8l.io/api-scrape-port: "8590"
        checksum/config: {{ include (print $.Template.BasePath "/ConfigMap.yaml") . | sha256sum }}
        # checksum/config: {{/* include ("sk8l.configmap") . | sha256sum */}}
    spec:
      hostname: sk8l-api
      subdomain: sk8l
      automountServiceAccountToken: true
      serviceAccountName: {{ .Values.serviceAccount.metadata.name | default "sk8l" }}
      {{- template "securityContext.pod" . }}
      containers:
        - name: sk8l-api
          {{- template "securityContext.container" . }}
          {{- $apiImage := .Values.sk8lApi.image | default "danroux/sk8l-api" }}
          {{- $apiTag := .Values.sk8lApi.imageTag | default "v0.13.0" }}
          image: {{ printf "%s:%s" $apiImage $apiTag }}
          imagePullPolicy: {{ .Values.sk8lApi.imagePullPolicy | default "IfNotPresent" | quote }}
          ports:
            - name: api-port
              protocol: TCP
              {{- with (index .Values.service) }}
              containerPort: {{ (index .ports 0).port }}
              {{- end }}
            - name: api-health-port
              protocol: TCP
              {{- with (index .Values.service) }}
              containerPort: {{ (index .ports 1).port }}
              {{- end }}
            - name: metrics-port
              protocol: TCP
              {{- with (index .Values.service) }}
              containerPort: {{ (index .ports 2).port }}
              {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 10 }}
          {{- end }}
          livenessProbe:
            grpc:
              {{- with (index .Values.service) }}
              port: {{ (index .ports 1).port }}
              {{- end }}
            initialDelaySeconds: 10
            periodSeconds: 30
          envFrom:
            - configMapRef:
                name: sk8l-api-configmap
          volumeMounts:
            - name: badger-storage
              mountPath: /tmp/badger
            - name: tls-certs
              mountPath: /etc/sk8l-certs
              readOnly: true
            {{- if .Values.sk8lApi.volumeMounts }}
            {{- toYaml .Values.sk8lApi.volumeMounts | nindent 12 }}
            {{- end }}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: badger-storage
          emptyDir: {}
        - name: tls-certs
          projected:
            sources:
            - secret:
                name: sk8l-server-cert-secret
                items:
                  - key: tls.crt
                    path: server-cert.pem
                  - key: tls.key
                    path: server-key.pem
            - secret:
                name: sk8l-ca-root-cert-secret
                items:
                  - key: tls.crt
                    path: ca-cert.pem
        {{- if .Values.sk8lApi.volumes }}
        {{- toYaml .Values.sk8lApi.volumes | nindent 8 }}
        {{ end }}
        {{- if .Values.sk8lUi.volumes }}
        {{- toYaml .Values.sk8lUi.volumes | nindent 8 }}
        {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

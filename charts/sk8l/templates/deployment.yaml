apiVersion: apps/v1
kind: Deployment
metadata:
  name: sk8l
  labels:
    app: sk8l-app
  namespace: {{ .Values.namespace | default "sk8l" | quote }}
spec:
  {{- if .Values.sk8lApi.autoscaling.enabled }}
  replicas: {{ .Values.sk8lApi.autoscaling.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: sk8l
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/container: sk8l-api
        app.kubernetes.io/name: sk8l
      annotations:
        sk8l.io/api-scrape-port: "8590"
    spec:
      hostname: sk8l
      subdomain: sk8l-api
      serviceAccountName: {{ .Values.serviceAccount.metadata.name | default "sk8l" }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: sk8l-api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.sk8lApi.image | default "danroux/sk8l-api" | quote }}
          imagePullPolicy: {{ .Values.sk8lApi.imagePullPolicy | default "IfNotPresent" | quote }}
          ports:
            - name: api-port
              protocol: TCP
              {{- with (index .Values.service) }}
              containerPort: {{ (index  .ports 1).port }}
              {{- end }}
            - name: api-health-port
              protocol: TCP
              {{- with (index .Values.service) }}
              containerPort: {{ (index  .ports 2).port }}
              {{- end }}
            - name: metrics-port
              protocol: TCP
              {{- with (index .Values.service) }}
              containerPort: {{ (index  .ports 3).port }}
              {{- end }}
          livenessProbe:
            grpc:
              {{- with (index .Values.service) }}
              port: {{ (index .ports 2).port }}
              {{- end }}
            initialDelaySeconds: 10
            periodSeconds: 60
          envFrom:
            - configMapRef:
                name: sk8l-api-configmap
          volumeMounts:
            - name: tls-certs
              mountPath: /etc/sk8l-certs
              readOnly: true
            {{- if .Values.sk8lApi.volumeMounts }}
            {{- toYaml .Values.sk8lApi.volumeMounts | nindent 12 }}
            {{- end }}
        - name: envoy
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.envoy.image | default "envoyproxy/envoy:v1.28-latest" | quote }}
          imagePullPolicy: IfNotPresent
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - name: envoy-admin
              protocol: TCP
              containerPort: 9901
            - name: envoy-port
              protocol: TCP
              {{- with (index .Values.service) }}
              containerPort: {{ (index .ports 4).port }}
              {{- end }}
          volumeMounts:
            - name: envoy-config
              mountPath: /etc/envoy
              readOnly: true
            - name: tls-certs
              mountPath: /etc/sk8l-certs
              readOnly: true
            {{- if .Values.envoy.volumeMounts }}
            {{- toYaml .Values.envoy.volumeMounts | nindent 12 }}
            {{- end }}
        - name: sk8l-web
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.sk8lWeb.image | default "danroux/sk8l-web" | quote }}
          imagePullPolicy: {{ .Values.sk8lWeb.imagePullPolicy | default "IfNotPresent" | quote }}
          ports:
            {{- with (index .Values.service) }}
            - name: sk8l-web-port
              protocol: TCP
              containerPort: {{ (index  .ports 0).port }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: /
              {{- with (index .Values.service) }}
              port: {{ (index  .ports 0).port }}
              scheme: HTTPS
              {{- end }}
            initialDelaySeconds: 30
            periodSeconds: 120
          envFrom:
            - configMapRef:
                name: sk8l-web-configmap
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: tls-certs
              mountPath: /etc/sk8l-certs
              readOnly: true
            {{- if .Values.sk8lWeb.volumeMounts }}
            {{- toYaml .Values.sk8lWeb.volumeMounts | nindent 12 }}
            {{ end }}
        {{- if .Values.prometheus.create }}
        - name: prometheus
          image: {{ .Values.prometheus.image | default "prom/prometheus:v2.47.2" | quote }}
          ports:
            - name: prometheus-port
              protocol: TCP
              containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
              readOnly: true
            - name: tls-certs
              mountPath: /etc/sk8l-certs
              readOnly: true
            {{- if .Values.prometheus.volumeMounts }}
            {{- toYaml .Values.prometheus.volumeMounts | nindent 12 }}
            {{- end }}
        {{- end }}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: envoy-config
          configMap:
            name: envoy-configmap
        - name: nginx-config
          projected:
            sources:
              - configMap:
                  name: nginx-configmap
        - name: tls-certs
          projected:
            sources:
            - secret:
                name: tls-server-cert
                items:
                  - key: tls.crt
                    path: server-cert.pem
                  - key: tls.key
                    path: server-key.pem
            - secret:
                name: tls-ca-cert
                items:
                  - key: tls.crt
                    path: ca-cert.pem
                  - key: tls.key
                    path: ca-key.pem
        {{- if .Values.sk8lApi.volumes }}
        {{- toYaml .Values.sk8lApi.volumes | nindent 8 }}
        {{ end }}
        {{- if .Values.sk8lWeb.volumes }}
        {{- toYaml .Values.sk8lWeb.volumes | nindent 8 }}
        {{ end }}
        {{- if .Values.prometheus.create }}
        - name: prometheus-config
          configMap:
            name: prometheus-configmap
        {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sk8l-api-configmap
  namespace: {{ .Values.namespace.name }}
data:
  K8_NAMESPACE: {{ .Values.namespace.name }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sk8l-ui-configmap
  namespace: {{ .Values.namespace.name }}
data:
  NODE_EXTRA_CA_CERTS: "/etc/sk8l-certs/ca-cert.pem"
  VUE_APP_SK8L_API_URL: {{ .Values.configMaps.ui.vue_app_sk8l_api_url }}
  VUE_APP_SK8L_K8_NAMESPACE: {{ .Values.namespace.name }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-configmap
  namespace: {{ .Values.namespace.name }}
data:
  envoy.yaml: |-
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }
    static_resources:
      listeners:
        - name: listener_0
          address:
            socket_address: { address: 0.0.0.0, port_value: 9080 }
          filter_chains:
            - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  codec_type: auto
                  stat_prefix: ingress_http
                  route_config:
                    name: local_route
                    virtual_hosts:
                      - name: local_service
                        domains: ["*"]
                        routes:
                          - match: { prefix: "/" }
                            route:
                              cluster: sk8l_service
                              timeout: 0s
                              max_stream_duration:
                                grpc_timeout_header_max: 0s
                        cors:
                          allow_origin_string_match:
                            - prefix: "*"
                          allow_methods: GET, PUT, DELETE, POST, OPTIONS
                          allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                          max_age: "1728000"
                          expose_headers: custom-header-1,grpc-status,grpc-message
                  http_filters:
                    - name: envoy.filters.http.grpc_web
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                    - name: envoy.filters.http.cors
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                    - name: envoy.filters.http.router
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                # https://www.envoyproxy.io/docs/envoy/v1.27.0/api-v3/extensions/transport_sockets/tls/v3/tls.proto#extensions-transport-sockets-tls-v3-downstreamtlscontext
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  common_tls_context:
                    tls_certificates:
                      - certificate_chain:
                          # Certificate must be PEM-encoded
                          filename: /etc/sk8l-certs/server-cert.pem
                        private_key:
                          filename: /etc/sk8l-certs/server-key.pem
                    validation_context:
                      only_verify_leaf_cert_crl: true
                      trusted_ca:
                        filename: /etc/sk8l-certs/ca-cert.pem
      clusters:
        - name: sk8l_service
          connect_timeout: 0.25s
          type: logical_dns
          http2_protocol_options: {}
          lb_policy: round_robin
          # win/mac hosts: Use address: host.docker.internal instead of address: localhost in the line below
          load_assignment:
            cluster_name: cluster_0
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: sk8l
                        port_value: 8585
          # http2_protocol_options: {} # Force HTTP/2
          # Your grpc server communicates over TLS. You must configure the transport
          # socket. If you care about the overhead, you should configure the grpc
          # server to listen without TLS. If you need to listen to grpc-web and grpc
          # over HTTP/2 both you can also proxy your TCP traffic with the envoy.
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
  namespace: {{ .Values.namespace.name }}
data:
  nginx.conf: |-
    user  nginx;
    worker_processes 1;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    worker_rlimit_nofile 512;

    events {
        worker_connections  256;
    }

    http {
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;

        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;
        open_file_cache max=256 inactive=10s;
        open_file_cache_valid 120s;

        upstream sk8l_upstream {
            server sk8l:1337;
            keepalive 70;
        }

        server {
            listen 8080;
            listen 8001 ssl;

            server_name  localhost;
            keepalive_timeout   70;
            # root   /usr/share/nginx/html;
            ssl_certificate     /etc/sk8l-certs/server-cert.pem;
            ssl_certificate_key /etc/sk8l-certs/server-key.pem;
            ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
            # ssl_ciphers         HIGH:!aNULL:!MD5;

            gzip on;
            gzip_min_length 1000;
            gzip_proxied expired no-cache no-store private auth;
            gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

            location / {
              root   /app;
              index  index.html;
              try_files $uri $uri/ /index.html;
            }
        }
    }
